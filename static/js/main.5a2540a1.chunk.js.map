{"version":3,"sources":["bus.svg","topBar.js","bottomDrawer.js","apiCalls/apiCalls.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","list","width","bar","zIndex","drawer","flexShrink","TopBar","classes","React","useState","open","setOpen","AppBar","position","className","Toolbar","IconButton","edge","color","aria-label","onClick","Menu","Typography","variant","Drawer","anchor","onClose","role","List","ListItem","button","ChevronLeft","ListItemIcon","Room","ListItemText","BottomDrawer","props","minSpeed","maxSpeed","unit","displayData","data","length","splice","Math","max","apply","map","o","min","colorSwitcher","fill","datum","strokeWidth","Grid","container","direction","alignItems","style","bottom","Button","item","ExpandMore","padding","left","top","domainPadding","x","VictoryTheme","material","text","y","textAnchor","dependentAxis","tickLabels","letterSpacing","fontSize","marginBlock","tickFormat","ceil","stroke","parent","border","right","horizontal","labels","api_key","process","REACT_APP_BUS","ApiCall","Component","getPositions","a","headers","v","axios","get","then","response","Siri","ServiceDelivery","VehicleMonitoringDelivery","VehicleActivity","catch","error","console","log","locationUpdateTimer","InfoBox","require","MyMap","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","isMarkerShown","icon","url","busIcon","scaledSize","window","google","maps","Size","defaultPosition","LatLng","options","closeBoxURL","enableEventPropagation","backgroundColor","opacity","fontColor","bus","Date","toLocaleTimeString","nextStop","App","_isMounted","updateBusInfo","err","busList","searchBusObject","state","updateAverageSpeed","setState","longitude","parseFloat","latitude","timestamp","i","busObj","nextBus","stopName","averageSpeedMapping","lastIndex","mappingArr","mappingObj","pop","nextLongitude","nextLatitude","distance","calculateDistance","endTime","duration","calculateTimeDifference","startTime","averageSpeed","calculateSpeed","push","nextObj","LineRef","VehicleRef","lat1","lon1","lat2","lon2","radlat1","PI","radlat2","theta","radtheta","dist","sin","cos","acos","start","end","startDateObj","endDateObj","parse","time","toFixed","bind","this","setInterval","e","clearInterval","apiKey","REACT_APP_MAP","height","key","googleMapURL","loadingElement","containerElement","mapElement","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5a2540a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bus.dd3bc86f.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, IconButton, Typography, List, Drawer, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { Menu, Room,ChevronLeft } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  bar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: 250,\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nexport default function TopBar() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\" className={classes.bar}>\r\n          <Toolbar>\r\n            <IconButton \r\n            edge=\"start\" \r\n            className={classes.menuButton} \r\n            color=\"inherit\" \r\n            aria-label=\"menu\"\r\n            onClick={()=> setOpen(!open)}>\r\n              <Menu />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Bus App\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer \r\n        anchor='left' \r\n        open={open} \r\n        onClose={()=> setOpen(false)}\r\n        className={classes.drawer}>\r\n          <div\r\n          role=\"presentation\"\r\n          className={classes.list}\r\n          >\r\n            <List>\r\n              <ListItem button onClick={()=>setOpen(false)}>\r\n                <ChevronLeft /> \r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemIcon> <Room /> </ListItemIcon>\r\n                <ListItemText> Bus Map </ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, IconButton, Drawer, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { VictoryChart, VictoryTheme, VictoryLine, VictoryLabel, VictoryAxis, VictoryBar} from 'victory';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nexport default function BottomDrawer(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const displayData = props.data.length>10? props.data.splice(props.data.length-11, props.data.length-1):props.data\r\n  let minSpeed, maxSpeed, unit;\r\n  if (props.data.length>0) {\r\n    maxSpeed = Math.max.apply(Math, props.data.map(function(o) { return o['averageSpeed']; }))\r\n    minSpeed = Math.min.apply(Math, props.data.map(function(o) { return o['averageSpeed']; }))\r\n    unit = (maxSpeed-minSpeed) / 5\r\n  }\r\n  \r\n\r\n  const colorSwitcher = {\r\n    fill: (data) => {\r\n      let color = 'blue';\r\n      if (data.datum['averageSpeed'] > 0 && data.datum['averageSpeed'] <= unit) {\r\n        color = 'red';\r\n      }\r\n      if (data.datum['averageSpeed'] > unit && data.datum['averageSpeed'] <= 2*unit) {\r\n        color = 'orange';\r\n      }\r\n      if (data.datum['averageSpeed'] > 2*unit && data.datum['averageSpeed']<= 3*unit) {\r\n        color = 'yellow';\r\n      }\r\n      if (data.datum['averageSpeed'] > 3*unit && data.datum['averageSpeed'] <= 4*unit) {\r\n        color = 'green';\r\n      }\r\n      return color;\r\n    },\r\n    strokeWidth: 0\r\n  };\r\n\r\n\r\n    return (\r\n      <Grid \r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      style={{position: 'fixed', bottom: '0vh'}}\r\n      >\r\n        <Button \r\n        onClick={()=>setOpen(true)}\r\n        color=\"primary\">\r\n          Show Graph\r\n        </Button>\r\n        <Drawer \r\n        anchor='bottom' \r\n        open={open} \r\n        onClose={()=> setOpen(false)}\r\n        className={classes.drawer}>\r\n          \r\n          <Grid\r\n          item \r\n          container\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          >\r\n            <IconButton \r\n            onClick={()=>setOpen(false)}\r\n            color=\"primary\">\r\n              <ExpandMore /> \r\n            </IconButton>\r\n            <div>\r\n\r\n            {props.data.length>0 && props.data[0]['distance']>0 && \r\n            <VictoryChart\r\n              width={800}\r\n              padding={{ left: 250, bottom: 50, top: 50 }}\r\n              domainPadding={{x:100}}\r\n              theme={VictoryTheme.material}\r\n            >\r\n              <VictoryLabel \r\n              text={\"Time spent between stops for line \"+displayData[0]['LineRef']} \r\n              x={350} y={10} textAnchor=\"middle\"/>\r\n              <VictoryAxis\r\n                dependentAxis\r\n                style={{\r\n                  tickLabels: {\r\n                    letterSpacing: \"1px\",\r\n                    fontSize: 9,\r\n                    marginBlock: \"20px\"\r\n                  }\r\n                }}\r\n              />\r\n              <VictoryAxis\r\n                tickFormat={(x) => (`${Math.ceil(x * 60)} min`)}\r\n              />\r\n              <VictoryLine\r\n                data={displayData}\r\n                x=\"duration\"\r\n                y=\"stopName\"\r\n                style={{\r\n                  data: { stroke: \"#c43a31\" },\r\n                  parent: { border: \"1px solid #ccc\"}\r\n                }}\r\n              />\r\n            </VictoryChart>}\r\n\r\n            {props.data.length>0 && props.data[0]['distance']>0 && \r\n            <VictoryChart\r\n              width={800}\r\n              padding={{ left: 250, right: 50, bottom: 50, top: 50  }}\r\n              domainPadding={{x:100}}\r\n              theme={VictoryTheme.material}\r\n            >  \r\n              <VictoryLabel \r\n              text={\"Average Speed between Stops for line \"+displayData[0]['LineRef']} \r\n              x={350} y={10} textAnchor=\"middle\"/>\r\n              \r\n              <VictoryAxis\r\n                dependentAxis\r\n                tickFormat={(x) => (`${x}mph`)}\r\n                \r\n              />\r\n              <VictoryAxis\r\n                style={{\r\n                  tickLabels: {\r\n                    letterSpacing: \"1px\",\r\n                    fontSize: 9,\r\n                    marginBlock: \"20px\"\r\n                  }\r\n                }}\r\n              />\r\n\r\n              <VictoryBar\r\n                horizontal\r\n                data={displayData}\r\n                labels={({ datum }) => `${datum['averageSpeed']}`}\r\n                style={{data: { ...colorSwitcher }}}\r\n                y=\"averageSpeed\"\r\n                x=\"stopName\"\r\n              />\r\n            </VictoryChart>}\r\n\r\n            </div>\r\n            {props.data.length>0 && props.data[0]['distance']===0 && \r\n              <Typography variant=\"h6\">\r\n                Not enough data to show graph. Please wait for a few more minutes.\r\n              </Typography>\r\n            }\r\n            <br/>\r\n          </Grid>\r\n\r\n        </Drawer>\r\n      </Grid>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst api_key = process.env.REACT_APP_BUS\r\nexport default class ApiCall extends React.Component {\r\n\r\n    static getPositions = async () =>{\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n        };\r\n\r\n        let v = [];\r\n        await axios.get(\r\n            'https://api.511.org/transit/VehicleMonitoring?api_key='+api_key+'&agency=AC',\r\n            {},\r\n            {headers}\r\n            ).then(response => {\r\n                v = response.data.Siri.ServiceDelivery.VehicleMonitoringDelivery.VehicleActivity;\r\n            })\r\n            .catch(error => {\r\n                console.log(\"@Error@\", error);\r\n            }\r\n        )\r\n\r\n        return v;\r\n    }\r\n}","import React from 'react';\nimport { GoogleMap,Marker, withScriptjs, withGoogleMap } from 'react-google-maps';\nimport './App.css';\nimport TopBar from './topBar.js';\nimport BottomDrawer from './bottomDrawer.js'\nimport busIcon from './bus.svg';\nimport ApiCall from './apiCalls/apiCalls'\nconst { InfoBox } = require(\"react-google-maps/lib/components/addons/InfoBox\");\n\n\nlet locationUpdateTimer;\n// let busLocation;\n// let lat = busLocation? busLocation['Latitude']:37.338207;\n// let lng = busLocation? busLocation['Longitude']: -121.886330;\nconst MyMap = withScriptjs(withGoogleMap((props)=>\n    <GoogleMap\n      defaultZoom={9}\n      defaultCenter={{lat: 37.737, lng: -122.235}}\n    >\n      {props.isMarkerShown && \n        <Marker \n          position={{lat:props.lat, lng:props.lng}}\n          icon={{url: busIcon, scaledSize: new window.google.maps.Size(40, 40)}}\n        />}\n      <InfoBox\n        defaultPosition={new window.google.maps.LatLng(props.lat, props.lng)}\n        options={{ closeBoxURL: ``, enableEventPropagation: true }}\n      >\n        <div style={{ backgroundColor: `white`, opacity: 0.75, padding: `12px` }}>\n          <div style={{ fontSize: `16px`, fontColor: `#08233B` }}>\n            {props.bus && \n              <p>Last Updated: {(new Date(props.bus['RecordedAtTime'])).toLocaleTimeString('it-IT')}\n              <br/>Line:{props.bus['MonitoredVehicleJourney']['LineRef']}\n              <br/>{props.bus['MonitoredVehicleJourney']['PublishedLineName']}\n              <br/> From {props.bus['MonitoredVehicleJourney']['OriginName']} to {props.bus['MonitoredVehicleJourney']['DestinationName']}\n              <br/> Next stop: {props.nextStop}\n              </p>}\n          </div>\n        </div>\n      </InfoBox>\n    </GoogleMap>\n))\n\nclass App extends React.Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n\n    this.state={\n      bus: null,\n      longitude: -121.886330,\n      latitude: 37.338207,\n      timestamp: '',\n      nextStop: '',\n      averageSpeedMapping: []\n    }\n    this.getPositions = this.getPositions.bind(this)\n    this.updateBusInfo = this.updateBusInfo.bind(this)\n    this.updateAverageSpeed = this.updateAverageSpeed.bind(this)\n    this.searchBusObject = this.searchBusObject.bind(this)\n    this.calculateDistance = this.calculateDistance.bind(this)\n    this.calculateTimeDifference = this.calculateTimeDifference.bind(this)\n    this.calculateSpeed = this.calculateSpeed.bind(this)\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.getPositions()\n    try { \n      locationUpdateTimer = setInterval(this.getPositions, 1000*60)\n    } catch(e) {\n        console.log(e);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    clearInterval(locationUpdateTimer)\n  }\n\n  // Calls API function\n  getPositions = () =>  {\n    ApiCall.getPositions()\n    .then(\n      (v) => {\n          this.updateBusInfo(v)\n      },\n      (err) => {\n        console.log(err)\n      })\n  }\n\n  // Updates the bus object in the state with new values\n  updateBusInfo = (busList) => {\n    if (busList && this._isMounted) {\n      const bus = this.searchBusObject(busList)\n      if (bus) {\n        let nextStop = ''\n        if (bus['MonitoredVehicleJourney']['MonitoredCall'] ) {\n          if ( bus['MonitoredVehicleJourney']['MonitoredCall']['StopPointName']!==this.state.nextStop) {\n            nextStop = bus['MonitoredVehicleJourney']['MonitoredCall']['StopPointName']\n          } else {\n            nextStop = this.state.nextStop;\n          }\n        }\n        if (nextStop!=='') {\n          this.updateAverageSpeed(bus, nextStop)\n        }\n        \n        this.setState({\n          bus,\n          nextStop,\n          longitude: parseFloat(bus['MonitoredVehicleJourney']['VehicleLocation']['Longitude']),\n          latitude: parseFloat(bus['MonitoredVehicleJourney']['VehicleLocation']['Latitude']),\n          timestamp: bus['RecordedAtTime']\n        }) \n        \n      }\n    }\n  }\n\n  // If current state does not track a bus or the tracked bus cannot be found in the list, \n  // the first bus with monitored vehicle journey & monitored call will be returned.\n  searchBusObject = (busList) => {\n    let bus = this.state.bus;\n    for (let i=0; i< busList.length; i++) {\n      let busObj = busList[i]\n      if (bus===null) {\n        if (busObj['MonitoredVehicleJourney'] && busObj['MonitoredVehicleJourney']['MonitoredCall']\n          && busObj['MonitoredVehicleJourney']['MonitoredCall']['StopPointName'] &&\n          busObj['MonitoredVehicleJourney']['VehicleRef']!=='') {\n          return busObj;\n        }\n      } else {\n        if (busObj['MonitoredVehicleJourney'] && \n          busObj['MonitoredVehicleJourney']['VehicleRef']===this.state.bus['MonitoredVehicleJourney']['VehicleRef']) {\n          return busObj;\n        }\n        if (i===busList.length-1 && bus!==null) {\n          i = 0;\n          bus = null;\n        }\n      }\n    }\n    return null;\n  }\n\n  updateAverageSpeed = (nextBus, stopName) => {\n    const {bus, latitude, longitude, nextStop, averageSpeedMapping} = this.state;\n    const lastIndex = averageSpeedMapping.length-1;\n    let mappingArr = averageSpeedMapping;\n\n    if (bus && bus['MonitoredVehicleJourney']['VehicleRef']!== nextBus['MonitoredVehicleJourney']['VehicleRef']) {\n      mappingArr = [];\n    }\n    if (lastIndex>=0 && bus['MonitoredVehicleJourney']['VehicleRef']=== nextBus['MonitoredVehicleJourney']['VehicleRef']){\n      let mappingObj = mappingArr.pop();\n\n      const nextLongitude = parseFloat(nextBus['MonitoredVehicleJourney']['VehicleLocation']['Longitude']);\n      const nextLatitude = parseFloat(nextBus['MonitoredVehicleJourney']['VehicleLocation']['Latitude']);\n\n      if (nextStop!==stopName) {\n        mappingObj.distance = this.calculateDistance(latitude,longitude,nextLatitude,nextLongitude);\n      } else {\n        mappingObj.distance += this.calculateDistance(latitude,longitude,nextLatitude,nextLongitude);\n      }\n      mappingObj.endTime = nextBus['RecordedAtTime']\n      mappingObj.duration = this.calculateTimeDifference(mappingObj.startTime, mappingObj.endTime);\n      mappingObj.averageSpeed = this.calculateSpeed(mappingObj.distance, mappingObj.duration);\n       \n      mappingArr.push(mappingObj)\n    }\n    if (lastIndex<0 || nextStop!==stopName) {\n      let nextObj = {}\n      nextObj.LineRef = nextBus['MonitoredVehicleJourney']['LineRef']\n      nextObj.VehicleRef = nextBus['MonitoredVehicleJourney']['VehicleRef']\n      nextObj.stopName = stopName\n      nextObj.averageSpeed = 0\n      nextObj.distance = 0\n      nextObj.duration = 0\n      nextObj.startTime = nextBus['RecordedAtTime']\n      nextObj.endTime = nextBus['RecordedAtTime']\n      mappingArr.push(nextObj);\n    }\n    this.setState({averageSpeedMapping: mappingArr})\n  }\n\n  //takes in latitude and longitude of two locations \n  // returns the distance between them in km\n    calculateDistance = (lat1, lon1, lat2, lon2) => \n    {\n      if ((lat1 === lat2) && (lon1 === lon2)) {\n        return 0;\n      }\n      else {\n        var radlat1 = Math.PI * lat1/180;\n        var radlat2 = Math.PI * lat2/180;\n        var theta = lon1-lon2;\n        var radtheta = Math.PI * theta/180;\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n        if (dist > 1) {\n          dist = 1;\n        }\n        dist = Math.acos(dist);\n        dist = dist * 180/Math.PI;\n        dist = dist * 60 * 1.1515;\n\n        return dist;\n      }\n    }\n\n    //takes in two timestamps in UTC string\n    // returns the difference in hour\n    calculateTimeDifference = (start, end) => {\n      const startDateObj = new Date(start);\n      const endDateObj = new Date(end);\n      return Date.parse(endDateObj) > Date.parse(startDateObj)?(Date.parse(endDateObj) - Date.parse(startDateObj)) / 1000 / 3600:0;\n    }\n\n    calculateSpeed = (distance, time) => {\n      if (time > 0) {\n        return +((distance / time).toFixed(1)); \n      }\n      return 0;\n    }\n\n  render() {\n    const {longitude,latitude, bus, nextStop, averageSpeedMapping} = this.state;\n    const apiKey = process.env.REACT_APP_MAP\n\n\n    return (\n      <div style={{width: '100vw', height: '100vh'}}>\n        <TopBar />\n        <div style={{width: '100vw', height: '80vh'}}>\n          <MyMap\n          key={latitude+\" \"+longitude+\" \"+nextStop}\n          bus={bus}\n          lat={latitude}\n          lng={longitude}\n          nextStop={nextStop}   \n          isMarkerShown\n          googleMapURL={\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=\"+apiKey}\n          loadingElement={<div style={{height: '80vh'}}/>}\n          containerElement={<div style={{height: '80vh'}}/>}\n          mapElement={<div style={{height: '80vh'}}/>} />\n          <BottomDrawer data={averageSpeedMapping}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}